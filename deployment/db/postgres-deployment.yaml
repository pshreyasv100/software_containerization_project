apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres-container
        image: postgres:13.1-alpine
        imagePullPolicy: "IfNotPresent"
        ports:
          - containerPort: 5432
        envFrom:
          - configMapRef:
              name: postgres-config
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: POSTGRES_PASSWORD
        volumeMounts:
        - mountPath: /opt/postgre/data
          name: postgredb
        
        lifecycle:
          postStart:
            exec:
              command: ["/bin/bash","-c","sleep 20 && PGPASSWORD=$POSTGRES_PASSWORD psql $POSTGRES_DB -U $POSTGRES_USER -c \'CREATE TABLE IF NOT EXISTS movie (  id SERIAL PRIMARY KEY, title VARCHAR NOT NULL, genre VARCHAR NOT NULL)\'"] 

      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim