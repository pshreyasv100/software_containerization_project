namespace: default

api:

  replicaCount: 3
  image: localhost:32000/inventory-api:v1
  serviceType: NodePort
  port: 8081
  targetPort: 5000
  nodePort: 30011  



db:
  replicas: 1
  image: postgres:13.1-alpine
  imagePullPolicy: IfNotPresent
  containerPort: 5432
  mountPath: /opt/postgre/data
  postStartCommand: sleep 20 && PGPASSWORD=$POSTGRES_PASSWORD psql $POSTGRES_DB -U $POSTGRES_USER -c 'CREATE TABLE IF NOT EXISTS movie (  id SERIAL PRIMARY KEY, title VARCHAR NOT NULL, genre VARCHAR NOT NULL)'
  type: NodePort
  port: 5432
  nodePort: 30010
    
  storageType: local
  storageClassName: microk8s-hostpath
  capacity: 5Gi
  accessModes: ReadWriteMany
  path: "/opt/postgres/data"

  POSTGRES_DB: postgresdb
  POSTGRES_USER: postgresadmin
  POSTGRES_PORT: 5432
  # POSTGRES_HOST: postgres-service
  POSTGRES_PASSWORD: YWRtaW4xMjMK


replicaCount: 3
frontendImage: localhost:32000/inventory-ui:v1
frontendTargetPort: 80
frontendPort: 8888
backendImage: localhost:32000/inventory-api:v1
backendTargetPort: 5000
backendPort: 8081
dbPort: 5432
hostName: movies.com

# ingress:
#     name: inventory-api-ingress
#     cors:
#       enabled: "true"
#       allowedMethods: "PUT, GET, POST, OPTIONS"
#       allowedOrigin: "*"
#       allowedCredentials: "true"

#     certManager:
#       issuer: my-ca-issuer
#       commonName: movies.com

#     hostname: movies.com
#     path: "/"
#     pathType: Prefix
#     servicePort: 8081
#     certSecretName: myingress-cert
 